# -*- coding: utf-8 -*-
"""vianova-data-intern-case-study.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jrr93CXnfBlxJLKBkVB-ezVZEMjv7wPA
"""

# necessary packages
import pandas as pd

"""## Import the dataset"""

df_city = pd.read_csv('/content/geonames-all-cities-with-a-population-1000.csv',delimiter=';')
df_city.head()

"""## Function of filtering the countries that don't host a megapoliss"""

def country_without_megapoliss(dataframe):
  # group by country code and calculate the maximum population
  df_max_population = dataframe.groupby('Country Code')['Population'].max()
  # filter the country's maximum population of all the cities that lower then 10,000,000
  df_code = pd.DataFrame(df_max_population[df_max_population < 10000000].index)
  return df_code

"""## Using the open data to merge the country name without NULL value"""

# read the csv containing the full country code and country name
full_country_name = pd.read_excel('/content/iso_2digit_alpha_country_codes.xls', header=2)

# rename the column
full_country_name = full_country_name.rename(columns={'Code Value': 'Country Code', 'Definition': 'Country name EN'})
full_country_name.head()

# get the country code we needed
try:
  df_code = country_without_megapoliss(df_city)
except:
  print('Check the column name and data type ofinput dataframe')

# merge the country name in the filter dataframe
df_result = df_code.merge(full_country_name[['Country Code','Country name EN']], on='Country Code', how='left').drop_duplicates(subset='Country Code')

# order by country name
result = df_result.sort_values('Country name EN').reset_index(drop=True)
result.info()

"""## Save it as the tsv file"""

result.to_csv('result.tsv', sep='\t', index=False)